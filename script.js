//            node Lesson_4/script           - –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ —Ç–µ—Ä–º—ñ–Ω–∞–ª ‚â°
// $                  node script
//! -----------------------  Task-1  `Simple JS Program`  ------------------------

//* I have 10$ amount
// let amount = 20;

//* Cookies cost 7$ cookiesPrice
//* Candies cost 8$
// let cookiesPrice = 7;
// let candiesPrice = 8;

//* Can I buy both candies and cookies?
// let totalPrice = cookiesPrice + candiesPrice;

// if (amount < totalPrice) {
//   console.log("No, I need more money");
// } else {
//   console.log("Yes, I can buy everything");
// }
//* Yes, I can buy everything
//* No, I need more money

//! -----------------------  Task-2  ------------------------
//* –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —Ç–∏ –Ω–∞–≤—á–∏—à—Å—è –≤–∏–≤–æ–¥–∏—Ç–∏ –¥–∞–Ω—ñ –≤ –∫–æ–Ω—Å–æ–ª—å.
//* –í–∏–≤–µ–¥–µ–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è greeting, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ console.log. –î–ª—è —Ü—å–æ–≥–æ –Ω–∞–ø–∏—à–∏ –∑–º—ñ–Ω–Ω—É –≤ –∫—Ä—É–≥–ª—ñ –¥—É–∂–∫–∏ –º–µ—Ç–æ–¥—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:

// const variable = 123;
// console.log(variable);
// //* –≤ –∫–æ–Ω—Å–æ–ª—ñ –≤–∏–≤–µ–¥–µ—Ç—å—Å—è 123

//* –©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è, –Ω–∞–¥—Ä—É–∫–æ–≤–∞–Ω—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é console.log, —É —Ä–æ–∑–¥—ñ–ª—ñ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–∞—Ç–∏—Å–Ω–∏ –î–∏–≤–∏—Ç–∏—Å—è –ª–æ–≥–∏.

//! -----------------------  Task-2  ------------------------
//* –ê —Ç–µ–ø–µ—Ä –∑–Ω–∞–π–¥–∏ –ø–æ–º–∏–ª–∫—É –≤ –∫–æ–¥—ñ.

//* –ö–æ–¥, —è–∫–∏–π –º–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ñ, –Ω–µ –ø—Ä–∞—Ü—é—î üò¢ –í–∏–ø—Ä–∞–≤ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó —Ç–∞–∫, —â–æ–± –≤—ñ–Ω –∑–∞–ø—Ä–∞—Ü—é–≤–∞–≤.

//! fix the mistake
//! const books = 5;
//! books = 7;

//? let books = 5;
//? books = 7;

//! -----------------------  Task-2  ------------------------
//* –ê —Ç–µ–ø–µ—Ä –Ω–∞–≤—á–∏–º–æ—Å—è —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∑–º—ñ–Ω–Ω—ñ —Ç–∞ –∑—Ä–æ–±–∏–º–æ —Ñ—Ä—É–∫—Ç–æ–≤–∏–π —Å—ñ–∫!
//* –ú–∏ –º–∞—î–º–æ 4 –∫–≥ —è–±–ª—É–∫ —ñ 3 –∫–≥ –≥—Ä—É—à. –¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî –æ–≥–æ–ª–æ—Å–∏—Ç–∏ 3 –Ω–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ:
//*    `apples` –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 4;
//*    `pears` –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 3;
//*    `fruits`, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ—ó –¥–æ—Ä—ñ–≤–Ω—é—î —Å—É–º—ñ –∑–º—ñ–Ω–Ω–∏—Ö apples —ñ pears.

// –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
// const apples = 4;

//! declare variables with correct values
// const apples = 4;
// const pears = 3;
// const fruits = apples + pears;

//! -----------------------  Task-2  ------------------------
//* –ê —Ç–µ–ø–µ—Ä –ø–æ—Ç—Ä–µ–Ω—É–π—Å—è –∑–∞–∫–æ–º–µ–Ω—Ç–æ–≤—É–≤–∞—Ç–∏ –Ω–∞—à –∫–æ–¥.
//* –ó–∞–∫–æ–º–µ–Ω—Ç—É–π const age —ñ const name, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –æ–¥–Ω–æ—Ä—è–¥–∫–æ–≤—ñ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ (//).

// –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
// const name = 'Bob';

//! -----------------------  Task-2  ------------------------
//* –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–æ–∑–∫–æ–º–µ–Ω—Ç—É–≤–∞—Ç–∏ –∫–æ–¥.
//* –î–ª—è —Ü—å–æ–≥–æ –≤–∏–¥–∞–ª–∏ —Å–∏–º–≤–æ–ª–∏ –æ–¥–Ω–æ—Ä—è–¥–∫–æ–≤–æ–≥–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—è `//`.
// const name = 'Alice';
// const age = 28;

//! -----------------------  Task-3  ------------------------
//* –ó–º—ñ–Ω–Ω—ñ –º–æ–∂—É—Ç—å –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ –¥–∞–Ω—ñ. –¶–µ –º–æ–∂—É—Ç—å –±—É—Ç–∏ —á–∏—Å–ª–∞, —Ä—è–¥–∫–∏, –±—É–ª–µ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–æ—â–æ.
//* –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ –º–∏ —Å—Ç–≤–æ—Ä–∏–º–æ –¥–µ–∫—ñ–ª—å–∫–∞ –∑–º—ñ–Ω–Ω–∏—Ö —Ç–∞ –∑–∞–ø–∏—à–µ–º–æ —É –Ω–∏—Ö –¥–∞–Ω—ñ —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤.
//*    –û–≥–æ–ª–æ—Å–∏ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∑–º—ñ–Ω–Ω—ñ:
//*     - brand –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 'Toyota';
//*     - price –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 22500;
//*     - isSedan –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º true;
//*     - wings –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º undefined;
//*     - owner –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º null.
//* –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É: –¥–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ `const`. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–≥–æ–ª–æ—Å–∏—Ç–∏ –∑–º—ñ–Ω–Ω—É name –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 'Ivan', —Ü–µ –≤–∏–≥–ª—è–¥–∞—Ç–∏–º–µ —Ç–∞–∫:
//*         const name = 'Ivan';
//* –¢–∞–∫–æ–∂ –ø–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤–∏ —è–≤–Ω–æ –ø—Ä–∏—Å–≤–æ—ó–ª–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω—ñ–π –ø—ñ–¥ —á–∞—Å –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é const. –ù–∞—Å—Ç—É–ø–Ω–∏–π –∫–æ–¥ –≤–∏–∫–ª–∏—á–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–Ω—É –ø–æ–º–∏–ª–∫—É:
// const surname; //! SyntaxError: Missing initializer in const declaration

// const brand = "Toyota";
// const price = 22500;
// const isSedan = true;
// const wings = undefined;
// const owner = null;
//! -----------------------  Task-4  ------------------------
//* –ù–∞—Å—Ç–∞–≤ —á–∞—Å –ø–æ–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ —á–∏—Å–ª–∞–º–∏ —Ç–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏.
//* –£ –∫–æ–¥—ñ —î –∑–º—ñ–Ω–Ω—ñ a —Ç–∞ b. –¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è: –æ–≥–æ–ª–æ—Å–∏ 4 –Ω–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ:
//*    `addition` –ø–æ–≤–∏–Ω–Ω–∞ –º—ñ—Å—Ç–∏—Ç–∏ —Å—É–º—É a —Ç–∞ b;
//*    `subtraction`     - —Ä—ñ–∑–Ω–∏—Ü—é a —Ç–∞ b;
//*    `division`        - —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥—ñ–ª–µ–Ω–Ω—è a –Ω–∞ b;
//*    `multiplication`  - –¥–æ–±—É—Ç–æ–∫ a —Ç–∞ b.
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
// const addition = a + b;

// const a = 10;
// const b = 2;
// //! write your code below this line
// const addition = a + b;
// const subtraction = a - b;
// const division = a / b;
// const multiplication = a * b;

//! -----------------------  Task-4  ------------------------
//* –ê –∑–∞—Ä–∞–∑ –ø–æ–ø—Ä–∞—Ü—é—î–º–æ –∑ —ñ–Ω—à–∏–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏. –£ –∫–æ–¥—ñ —î –∑–º—ñ–Ω–Ω—ñ a —Ç–∞ b.
//* –¢–≤–æ—î –∑–∞–≤–¥–∞–Ω–Ω—è: –æ–≥–æ–ª–æ—Å–∏ 2 –Ω–æ–≤—ñ –∑–º—ñ–Ω–Ω—ñ:
//*    exp –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—ñ–¥–Ω–µ—Å–µ–Ω–Ω—è a –¥–æ —Å—Ç–µ–ø–µ–Ω—è b;
//*    mod –º–∞—î –º—ñ—Å—Ç–∏—Ç–∏ –æ—Å—Ç–∞—á—É –≤—ñ–¥ –¥—ñ–ª–µ–Ω–Ω—è a –Ω–∞ b.

// const a = 7;
// const b = 2;
// //! write your code below this line
// const exp = a ** b;
// const mod = a % b;

//! -----------------------  Task-4  ------------------------
//* –ê —Ç–µ–ø–µ—Ä –ø–æ–ø—Ä–∞—Ü—é–π–º–æ –∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–æ–º –æ–±—á–∏—Å–ª–µ–Ω—å.
//* –£ –Ω–∞—à–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ —Ä–æ–∑—Å—Ç–∞–≤ –¥—É–∂–∫–∏ —Ç–∞–∫, —â–æ–± —É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –∑–º—ñ–Ω–Ω–∞ expression –¥–æ—Ä—ñ–≤–Ω—é–≤–∞–ª–∞ 10.
//* –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É: —Ç–æ–±—ñ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–≥–æ–ª–æ—à—É–≤–∞—Ç–∏ –Ω–æ–≤—É –∑–º—ñ–Ω–Ω—É. –†–æ–∑—Å—Ç–∞–≤ –¥—É–∂–∫–∏ –≤ —ñ—Å–Ω—É—é—á–æ–º—É –≤–∏—Ä–∞–∑—ñ.
//*       const expression = 10 * 7 + 8 - 11 / 4;
//! change code below
// const expression = (10 * (7 + 8 - 11)) / 4;
// const expression = 10 * (7 + 8 - 11) / 4;

//! -----------------------  Task-5  ------------------------
//* –ê —Ç–µ–ø–µ—Ä –∑–∞—Å—Ç–æ—Å—É—î–º–æ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü—ñ—é ‚Äî ¬´—Å–∫–ª–µ—é–≤–∞–Ω–Ω—è¬ª —Ä—è–¥–∫—ñ–≤ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é +.
//* –û–≥–æ–ª–æ—Å–∏ –Ω–æ–≤—É –∑–º—ñ–Ω–Ω—É resultString. –á—ó –∑–Ω–∞—á–µ–Ω–Ω—è ¬´—Å–∫–ª–µ–π¬ª —ñ–∑ —É–∂–µ –æ–≥–æ–ª–æ—à–µ–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö a, b —Ç–∞ c, —â–æ–± —É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ —É—Ç–≤–æ—Ä–∏–≤—Å—è —Ä—è–¥–æ–∫ 'Concatenation'.
//*    –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
//*      const a = 'llo';
//*      const b = 'He';
//*      const result = b + a + '!'; // –º—ñ—Å—Ç–∏—Ç—å —Ä—è–¥–æ–∫ 'Hello!'

// const a = "Con";
// const b = "enation";
// const c = "cat";
//! write your code below
// const resultString = a + c + b;

//! -----------------------  Task-5  ------------------------

//* –ê —Ç–µ–ø–µ—Ä —Å–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ—Å—è —ñ–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü—ñ—î—é ‚Äî –≤—Å—Ç–∞–≤–∫–æ—é –∑–º—ñ–Ω–Ω–∏—Ö —É —Ä—è–¥–æ–∫ —É –∑–≤–æ—Ä–æ—Ç–Ω–∏—Ö –ª–∞–ø–∫–∞—Ö.
//* –û–≥–æ–ª–æ—Å–∏ –Ω–æ–≤—É –∑–º—ñ–Ω–Ω—É resultString. –©–æ–± –∑–∞–ø–∏—Å–∞—Ç–∏ —ó–π –∑–Ω–∞—á–µ–Ω–Ω—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π —É–∂–µ –æ–≥–æ–ª–æ—à–µ–Ω—ñ –∑–º—ñ–Ω–Ω—ñ a —Ç–∞ b —ñ –∑–≤–æ—Ä–æ—Ç–Ω—ñ –ª–∞–ø–∫–∏ (``). –£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –ø–æ–≤–∏–Ω–µ–Ω –≤–∏–π—Ç–∏ —Ä—è–¥–æ–∫: Hello, world!.
//* –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É –Ω–∞ –ø—Ä–æ–±—ñ–ª, –∫–æ–º—É —Ç–∞ –∑–Ω–∞–∫ –æ–∫–ª–∏–∫—É, —è–∫—ñ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ.
//*    –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
//*      const a = 'Hello';
//*      const result = `${a}!!!`; // –º—ñ—Å—Ç–∏—Ç—å —Ä—è–¥–æ–∫ 'Hello!!!

// const a = "Hello";
// const b = "world";
// //! write your code below
// const resultString = `${a}, ${b}!`;

//! -----------------------  Task-6  ------------------------
//* –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —Ç–∏ –Ω–∞–≤—á–∏—à—Å—è –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –ª–æ–≥—ñ—á–Ω–∏–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º OR.
//* –¢–æ–±—ñ –¥–∞–Ω–æ –∫–æ–¥ –∑ –æ–≥–æ–ª–æ—à–µ–Ω–∏–º–∏ –∑–º—ñ–Ω–Ω–∏–º–∏. –ó–º—ñ–Ω–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –æ–¥–Ω—ñ—î—ó –∑ –Ω–∏—Ö (isHoliday –∞–±–æ isVacation) —Ç–∞–∫, —â–æ–± canStayHome –æ—Ç—Ä–∏–º–∞–ª–∞ –∑–Ω–∞—á–µ–Ω–Ω—è true.
//* –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É: —Ü–µ–π —Ä—è–¥–æ–∫ –∫–æ–¥—É –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ:
//*     const canStayHome = isHoliday || isVacation;

//* const isHoliday = false;
//* const isVacation = false;

//* const canStayHome = isHoliday || isVacation; //! don't change this line

// const isHoliday = true;
// const isVacation = false;

// const canStayHome = isHoliday || isVacation; //! don't change this line

//! -----------------------  Task-6  ------------------------
//* –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —Ç–∏ –Ω–∞–≤—á–∏—à—Å—è –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –ª–æ–≥—ñ—á–Ω–∏–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º AND.
//* –¢–æ–±—ñ –¥–∞–Ω–æ –∫–æ–¥ –∑ –æ–≥–æ–ª–æ—à–µ–Ω–∏–º–∏ –∑–º—ñ–Ω–Ω–∏–º–∏. –ó–º—ñ–Ω–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –æ–¥–Ω—ñ—î—ó –∑ –Ω–∏—Ö (isWaterHot –∞–±–æ haveTea) —Ç–∞–∫, —â–æ–± canMakeTea –æ—Ç—Ä–∏–º–∞–ª–∞ –∑–Ω–∞—á–µ–Ω–Ω—è false.
//* –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É: —Ü–µ–π —Ä—è–¥–æ–∫ –∫–æ–¥—É –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ:
//*     const canMakeTea = isWaterHot && haveTea;

// const isWaterHot = true;
// const haveTea = false;

// const canMakeTea = isWaterHot && haveTea; // don't change this line
// console.log(canMakeTea);
//! -----------------------  Task-7  ------------------------
// –ù–∞—Å—Ç–∞–≤ —á–∞—Å –ø–æ–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏.

// –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ –æ–≥–æ–ª–æ—Å–∏ —Ñ—É–Ω–∫—Ü—ñ—é myFunction –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–ª—é—á–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞ function.

// –ù–∞–ø—Ä–∏–∫–ª–∞–¥:

// function example() { }
// function myFunction() { }

//! -----------------------  Task-7  ------------------------
// –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ –æ–≥–æ–ª–æ—Å–∏ —Ñ—É–Ω–∫—Ü—ñ—é hello, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ function.

// –í—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –∑—Ä–æ–±–∏ –≤–∏–∫–ª–∏–∫ console.log –∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º 'Hello, world!'.
//! write code here
// function hello() {
//   console.log("Hello, world!");
// }
// hello();

//! -----------------------  Task-7  ------------------------
//* –û–≥–æ–ª–æ—Å–∏ —Ñ—É–Ω–∫—Ü—ñ—é getString, —è–∫–∞ –Ω–µ –ø—Ä–∏–π–º–∞—î –Ω—ñ—è–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤.
//* –í—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó getString:
//* –æ–≥–æ–ª–æ—Å–∏ –∑–º—ñ–Ω–Ω—É greeting, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ const, –ø—Ä–∏—Å–≤–æ–π —ó–π –∑–Ω–∞—á–µ–Ω–Ω—è - —Ä—è–¥–æ–∫ 'Hello, Mate academy!'.
//* –ø–æ–≤–µ—Ä–Ω–∏ –∑–º—ñ–Ω–Ω—É greeting –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–ª—é—á–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞ return.

// function getString() {
//   const greeting = "Hello, Mate academy!";
//   return greeting;
// }

// console.log(getString);
// console.log(getString());
//! -----------------------  Task-7  ------------------------
// –ê —Ç–µ–ø–µ—Ä —Å—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é greeter, —è–∫–∞:

// –ø—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä name;
// –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫-–ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —É –≤–∏–≥–ª—è–¥—ñ Hi, ${name}! (–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ return).
// –ø–∞—Ä–∞–º–µ—Ç—Ä: name = 'Anna'

// –ù–∞–ø—Ä–∏–∫–ª–∞–¥: greeter("Anna"); // –ø–æ–≤–µ—Ä—Ç–∞—î 'Hi, Anna!'

// function greeter(name) {
//   return `Hi, ${name}!`;
// }

//! -----------------------  Task-7  ------------------------
// –£—Å–∫–ª–∞–¥–Ω–∏–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è üòé

// –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é greeter, —è–∫–∞:

// –ø—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ name —Ç–∞ partOfTheDay;
// –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫-–ø—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è –≤ —Ç–∞–∫–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ:
// –ø–∞—Ä–∞–º–µ—Ç—Ä–∏: name = 'Paul', partOfTheDay = 'night'

// greeter('Paul','night'); // –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ 'Good night, Paul!'

// –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É: –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ name —Ç–∞ partOfTheDay –ø–µ—Ä–µ–¥–∞—é—Ç—å—Å—è –≤ —Ç–µ—Å—Ç–∞—Ö, —Ç–æ–±—ñ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ–≥–æ–ª–æ—à—É–≤–∞—Ç–∏ —ó—Ö —É –∫–æ–¥—ñ. –¢–∞–∫–æ–∂ –Ω–µ –∑–∞–±—É–¥—å –¥–æ–¥–∞—Ç–∏ –∫–æ–º—É —Ç–∞ –∑–Ω–∞–∫ –æ–∫–ª–∏–∫—É.

// function greeter(name, partOfTheDay) {
//   return `Good ${partOfTheDay}, ${name}!`;
// }
// console.log(greeter("Paul", "night"));

//! -----------------------  Task-7  ------------------------
// –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —Å—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é double, —è–∫–∞:

// –ø—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä num;
// –ø–æ–≤–µ—Ä—Ç–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è num, –ø–æ–º–Ω–æ–∂–µ–Ω–µ –Ω–∞ 2.
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥:

// –ø–∞—Ä–∞–º–µ—Ç—Ä: num = 5
// double(5); // –ø–æ–≤–µ—Ä—Ç–∞—î 10

// // –ø–∞—Ä–∞–º–µ—Ç—Ä: num = 24
// double(24); // –ø–æ–≤–µ—Ä—Ç–∞—î 48

// function double(num) {
//   return num * 2;
// }
// console.log(double(5));

//! -----------------------  Task-8  ------------------------
// –Ø–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —â–æ –∑–º—ñ–Ω–Ω–∞ 'amount' –±—ñ–ª—å—à–∞ –∑–∞ 75?
// –ü–æ—è—Å–Ω–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä—ñ–∞–Ω—Ç—É:
// –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: if (amount > 75) {code ...}, –æ—Å–∫—ñ–ª—å–∫–∏:

// –£–º–æ–≤—É —Å–ª—ñ–¥ –ø–æ–º—ñ—Å—Ç–∏—Ç–∏ —É –∫—Ä—É–≥–ª—ñ –¥—É–∂–∫–∏: –ù–∞–ø—Ä–∏–∫–ª–∞–¥, (price <90);

// –ö–æ–¥, —è–∫–∏–π –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è, —è–∫—â–æ —É–º–æ–≤–∞ –≤—ñ—Ä–Ω–∞, —Å–ª—ñ–¥ –ø–æ–º—ñ—Å—Ç–∏—Ç–∏ —É —Ñ—ñ–≥—É—Ä–Ω—ñ –¥—É–∂–∫–∏: –ù–∞–ø—Ä–∏–∫–ª–∞–¥:

// if (value === true) {
//    console.log('True!');
// }

// –®–∞–±–ª–æ–Ω –¥–ª—è if-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó:

// if (—É–º–æ–≤–∞) {
//    –∫–æ–¥...
// }

// –Ø–∫—â–æ —à–∞–±–ª–æ–Ω—É –Ω–µ –¥–æ—Ç—Ä–∏–º–∞–Ω–æ, –ø—Ä–æ–≥—Ä–∞–º–∞ –≤–∏–¥–∞—Å—Ç—å –ø–æ–º–∏–ª–∫—É.

//! -----------------------------------------------------------

// –©–æ –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—å–æ–≥–æ –∫–æ–¥—É?
// const score = 55;

// if (score >= 60) {
//   console.log('Well done!');
// } else {
//   console.log('Try again!');
// }

//! 55 –±—É–¥–µ –Ω–∞–¥—Ä—É–∫–æ–≤–∞–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—ñ
//! 'Well done!' –±—É–¥–µ –Ω–∞–¥—Ä—É–∫–æ–≤–∞–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—ñ
//? 'Try again!' –±—É–¥–µ –Ω–∞–¥—Ä—É–∫–æ–≤–∞–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—ñ
//! –ù—ñ—á–æ–≥–æ

//! -----------------------------------------------------------
//* –©–æ –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—å–æ–≥–æ –∫–æ–¥—É?
// function getSize(volume) {
//   if (volume < 250) {
//     return "small";
//   } else if (volume < 350) {
//     return "medium";
//   }
// }

// getSize(400);

//? undefined –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
//! 300 –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
//! 'medium' –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
//! 'small' –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ

//! -----------------------------------------------------------
//* –©–æ –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—å–æ–≥–æ –∫–æ–¥—É?
// function getPrice(amount) {
//   if (amount < 20) {
//     return amount * 10;
//   } else if (amount < 50) {
//     return amount * 8;
//   }
//   return amount * 5;
// }

// getPrice(50);

//! undefined –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
//! 50 –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
//? 250 –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
//! 400 –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ

//! -----------------------------------------------------------
//* –©–æ –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—å–æ–≥–æ –∫–æ–¥—É?
// const score = 59;

// if (score >= 60) {
//   console.log('Well done!');
// }

//? –ù—ñ—á–æ–≥–æ
//! 'Well done!' –±—É–¥–µ –Ω–∞–¥—Ä—É–∫–æ–≤–∞–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—ñ
//! 59 –±—É–¥–µ –Ω–∞–¥—Ä—É–∫–æ–≤–∞–Ω–æ –≤ –∫–æ–Ω—Å–æ–ª—ñ

//! -----------------------------------------------------------

// –©–æ –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—å–æ–≥–æ –∫–æ–¥—É?
// function getPrice(amount) {
//   if (amount < 20) {
//     return amount * 10;
//   } else if (amount < 50) {
//     return amount * 8;
//   }

//   return amount * 5;
// }

// getPrice(10);

//! 10 –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
//? 100 –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
//! 50 –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
//! undefined –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ

//! -----------------------------------------------------------
// –©–æ –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—å–æ–≥–æ –∫–æ–¥—É?
// function getSize(volume) {
//   if (volume < 250) {
//     return 'small';
//   } else if (volume < 350) {
//     return 'medium';
//   }
// }

// getSize(300);

// 'small' –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
//? 'medium' –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
// 300 –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ
// undefined –±—É–¥–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–æ

//! -----------------------------------------------------------
// –Ø–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —â–æ –∑–º—ñ–Ω–Ω–∞ 'sum' –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ –≤—ñ–¥ 15 –¥–æ 35 –≤–∫–ª—é—á–Ω–æ?
// –ü–æ—è—Å–Ω–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä—ñ–∞–Ω—Ç—É:
// –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: if (sum >= 15 && sum <= 35) {code ...}, —Ç–æ–º—É —â–æ:

// –û–ø–µ—Ä–∞—Ç–æ—Ä '&&' –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–æ–≥–æ, —â–æ –æ–±–∏–¥–≤—ñ —É–º–æ–≤–∏ –≤—ñ—Ä–Ω—ñ. –¶–µ –æ–∑–Ω–∞—á–∞—î, —â–æ —Ü—ñ–Ω–∞ –±—ñ–ª—å—à–∞ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î 15 –¢–ê –º–µ–Ω—à–∞ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î 35.

// ‚õî –Ü–Ω—à—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ, —Ç–æ–º—É —â–æ:

// –û–ø–µ—Ä–∞—Ç–æ—Ä '||' –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–æ–≥–æ, —â–æ —Ö–æ—á–∞ –± –æ–¥–Ω–∞ —É–º–æ–≤–∞ –≤—ñ—Ä–Ω–∞. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, if (sum >= 15 || sum <= 35) –±—É–¥–µ –≤—ñ—Ä–Ω–æ, —è–∫—â–æ sum = 1 (–±–æ sum <= 35) –ê–ë–û —è–∫—â–æ sum = 40 (–±–æ sum >= 15).

// –°–∏–Ω—Ç–∞–∫—Å–∏—Å if (15 <= sum <= 35) –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π, —Ç–æ–º—É —â–æ Javascript –±–∞—á–∏—Ç—å —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à—É —É–º–æ–≤—É: 15 <= sum –Ü —è–∫—â–æ sum = 36, —Ç–æ –≤—Å—è —É–º–æ–≤–∞ —Ç–∞–∫–æ–∂ –±—É–¥–µ –≤—ñ—Ä–Ω–æ—é, —Ç–æ–º—É —â–æ 15 <= sum. –£–º–æ–≤–∞ sum <= 35 —ñ–≥–Ω–æ—Ä—É—î—Ç—å—Å—è.

// –°–∏–Ω—Ç–∞–∫—Å–∏—Å if (35 >= sum >= 15) –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π, —Ç–æ–º—É —â–æ Javascript –±–∞—á–∏—Ç—å —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à—É —É–º–æ–≤—É: 35 >= sum –Ü —è–∫—â–æ sum = 14, —Ç–æ –≤—Å—è —É–º–æ–≤–∞ —Ç–∞–∫–æ–∂ –±—É–¥–µ –≤—ñ—Ä–Ω–æ—é, —Ç–æ–º—É —â–æ 35 >= sum. –£–º–æ–≤–∞ sum >= 15 —ñ–≥–Ω–æ—Ä—É—î—Ç—å—Å—è.

// if (15 <= sum <= 35) {code...}
// if (sum >= 15 || sum <= 35) {code...}
//? if (sum >= 15 && sum <= 35) {code...}
// if (35 >= sum >=15) {code...}

//! -----------------------------------------------------------
// –Ø–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —â–æ –∑–º—ñ–Ω–Ω–∞ 'status' –¥–æ—Ä—ñ–≤–Ω—é—î —Ä—è–¥–∫—É 'user'?
// –ü–æ—è—Å–Ω–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä—ñ–∞–Ω—Ç—É:
// –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: if (status === 'user') {code ...}, –æ—Å–∫—ñ–ª—å–∫–∏:

// –û–ø–µ—Ä–∞—Ç–æ—Ä '===' –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–æ–≥–æ, —â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó 'status' –¥–æ—Ä—ñ–≤–Ω—é—î 'user'; 'user' –ø–∏—à–µ—Ç—å—Å—è –≤ –ª–∞–ø–∫–∞—Ö, —Ç–æ–º—É —â–æ —Ü–µ —Ä—è–¥–æ–∫.

// ‚õî –Ü–Ω—à—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ñ, –æ—Å–∫—ñ–ª—å–∫–∏:

// –û–ø–µ—Ä–∞—Ç–æ—Ä '=' –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω—ñ–π. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: let status = 'admin'; // –∑–º—ñ–Ω–Ω–∞ 'status' —Ç–µ–ø–µ—Ä –∑–±–µ—Ä—ñ–≥–∞—î —Ä—è–¥–æ–∫ 'admin' let status = user; // –∑–º—ñ–Ω–Ω–∞ 'status' —Ç–µ–ø–µ—Ä –∑–±–µ—Ä—ñ–≥–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó 'user'

// –£–º–æ–≤–∞ if (status === user) –±–µ–∑ –ª–∞–ø–æ–∫ –æ–∑–Ω–∞—á–∞—î, —â–æ –∑–º—ñ–Ω–Ω—ñ 'status' —Ç–∞ 'user' –ø–æ–≤–∏–Ω–Ω—ñ –º–∞—Ç–∏ –æ–¥–Ω–∞–∫–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: let status = 'online'; let user = 'online'; if (status === user) –≤—ñ—Ä–Ω–æ, —Ç–æ–º—É —â–æ 'online' === 'online'

// if (status = user) {code...}
// if (status === 'user') {code...}
//? if (status = 'user') {code...}
// if (status === user) {code...}
//! -----------------------------------------------------------
// –Ø–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —â–æ –∑–º—ñ–Ω–Ω–∞ 'amount' –±—ñ–ª—å—à–∞ –∑–∞ 75?
// –ü–æ—è—Å–Ω–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä—ñ–∞–Ω—Ç—É:
// –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: if (amount > 75) {code ...}, –æ—Å–∫—ñ–ª—å–∫–∏:

// –£–º–æ–≤—É —Å–ª—ñ–¥ –ø–æ–º—ñ—Å—Ç–∏—Ç–∏ —É –∫—Ä—É–≥–ª—ñ –¥—É–∂–∫–∏: –ù–∞–ø—Ä–∏–∫–ª–∞–¥, (price <90);

// –ö–æ–¥, —è–∫–∏–π –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è, —è–∫—â–æ —É–º–æ–≤–∞ –≤—ñ—Ä–Ω–∞, —Å–ª—ñ–¥ –ø–æ–º—ñ—Å—Ç–∏—Ç–∏ —É —Ñ—ñ–≥—É—Ä–Ω—ñ –¥—É–∂–∫–∏: –ù–∞–ø—Ä–∏–∫–ª–∞–¥:

// if (value === true) {
//    console.log('True!');
// }

// –®–∞–±–ª–æ–Ω –¥–ª—è if-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó:

// if (—É–º–æ–≤–∞) {
//    –∫–æ–¥...
// }

// –Ø–∫—â–æ —à–∞–±–ª–æ–Ω—É –Ω–µ –¥–æ—Ç—Ä–∏–º–∞–Ω–æ, –ø—Ä–æ–≥—Ä–∞–º–∞ –≤–∏–¥–∞—Å—Ç—å –ø–æ–º–∏–ª–∫—É.

// if amount > 75 {code...}
//? if (amount > 75) {code...}
// if (amount > 75), code...
// if amount > 75, code...

//! -----------------------  Task-8  ------------------------
// –ê —Ç–µ–ø–µ—Ä –ø–æ–ø—Ä–∞—Ü—é—î–º–æ –∑ —É–º–æ–≤–Ω–∏–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏.

// –ó–∞ –∑–∞–∫–æ–Ω–æ–º, —Ç—ñ–ª—å–∫–∏ –ø–æ–≤–Ω–æ–ª—ñ—Ç–Ω—ñ –º–æ–∂—É—Ç—å –∫—É–ø—É–≤–∞—Ç–∏ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ñ –Ω–∞–ø–æ—ó.

// –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é canBuyBeer, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü—ñ–ª–µ —á–∏—Å–ª–æ age:

// —è–∫—â–æ age –±—ñ–ª—å—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î 18, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω–µ —Ä—è–¥–æ–∫ You can buy beer;
// –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω–µ —Ä—è–¥–æ–∫ You can not buy beer.
// –©–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä—è–¥–æ–∫ —ñ–∑ —Ñ—É–Ω–∫—Ü—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ return.

/**
 * @param {number} age
 *
 * @returns {string}
 */

// declare your function below
// function canBuyBeer(age) {
//   if (age >= 18) {
//     return `You can buy beer`;
//   }
//   return `You can not buy beer`;
// }
// console.log(canBuyBeer(17)); // –ø–æ–≤–µ—Ä–Ω–µ 'You can not buy beer'
// console.log(canBuyBeer(18)); // –ø–æ–≤–µ—Ä–Ω–µ 'You can buy beer'
// console.log(canBuyBeer(50)); // –ø–æ–≤–µ—Ä–Ω–µ 'You can buy beer'
//! -----------------------  Task-8  ------------------------
// –£—Å—ñ –æ—Ñ—ñ—Ü—ñ–∞–Ω—Ç–∏ –ª—é–±–ª—è—Ç—å —á–∞–π–æ–≤—ñ! –ê –æ–¥–∏–Ω —ñ–∑ –Ω–∏—Ö –ø–æ–¥—ñ–ª–∏–≤—Å—è –∑ –Ω–∞–º–∏ —Å–µ–∫—Ä–µ—Ç–Ω–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º.

// –†–µ–∞–ª—ñ–∑—É–π —Ñ—É–Ω–∫—Ü—ñ—é getTipsRating, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Å—É–º—É —á–∞–π–æ–≤–∏—Ö amount —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫-–æ—Ü—ñ–Ω–∫—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –∑–∞–ª–∏—à–µ–Ω–æ—ó —Å—É–º–∏:

// terrible, —è–∫—â–æ amount –¥–æ—Ä—ñ–≤–Ω—é—î 0 –≥—Ä–Ω;
// poor, —è–∫—â–æ amount –≤—ñ–¥ 1 –¥–æ 10 –≥—Ä–Ω –≤–∫–ª—é—á–Ω–æ;
// good, —è–∫—â–æ amount –≤—ñ–¥ 11 –¥–æ 20 –≥—Ä–Ω –≤–∫–ª—é—á–Ω–æ;
// great, —è–∫—â–æ amount –≤—ñ–¥ 21 –¥–æ 50 –≥—Ä–Ω –≤–∫–ª—é—á–Ω–æ;
// excellent, —è–∫—â–æ amount –±—ñ–ª—å—à–µ 50 –≥—Ä–Ω.
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥:
/**
 * @param {number} amount
 *
 * @returns {string}
 */
// function getTipsRating(amount) {
//   if (amount === 0) {
//     return "terrible";
//   }

//   if (amount <= 10) {
//     return "poor";
//   }
//   //! –¥–æ–¥–∞–π —Ä–µ—à—Ç—É —É–º–æ–≤...
//   if (amount <= 20 && amount > 10) {
//     return "good";
//   }
//   if (amount <= 50 && amount > 20) {
//     return "great";
//   }
//   return "excellent";
// }

// console.log(getTipsRating(0)); // 'terrible'
// console.log(getTipsRating(1)); // 'poor'
// console.log(getTipsRating(10)); // 'poor'
// console.log(getTipsRating(30)); // 'great'
// console.log(getTipsRating(11)); // 'good'
// console.log(getTipsRating(60)); // 'excellent'
//! -----------------------  Task-8  ------------------------
// –ü—Ä–æ–¥–æ–≤–∂–∏–º–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ —É–º–æ–≤–Ω–∏–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏.

// –ù—ñ—Ö—Ç–æ –Ω–µ –ª—é–±–∏—Ç—å –ø–ª–∞—Ç–∏—Ç–∏ –ø–æ–¥–∞—Ç–∫–∏, –∞–ª–µ –º–∏ –≤—Å—ñ –∑–æ–±–æ–≤‚Äô—è–∑–∞–Ω—ñ!

// –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculateTaxes, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ü—ñ–ª–µ —á–∏—Å–ª–æ income (—Ç–≤—ñ–π –¥–æ—Ö—ñ–¥) —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–¥–∞—Ç–æ–∫, —è–∫–∏–π —Ç–∏ –∑–∞–ø–ª–∞—Ç–∏—à. –°—É–º–∞ –ø–æ–¥–∞—Ç–∫—É –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ç–≤–æ–≥–æ –¥–æ—Ö–æ–¥—É:

// –¥–æ 1000 –≥—Ä–Ω –≤–∫–ª—é—á–Ω–æ ‚Äî –ø–æ–¥–∞—Ç–æ–∫ 2% –≤—ñ–¥ –¥–æ—Ö–æ–¥—É;
// –≤—ñ–¥ 1001 –≥—Ä–Ω –¥–æ 10000 –≥—Ä–Ω –≤–∫–ª—é—á–Ω–æ ‚Äî –ø–æ–¥–∞—Ç–æ–∫ 3% –≤—ñ–¥ –¥–æ—Ö–æ–¥—É;
// –±—ñ–ª—å—à–µ 10 000 –≥—Ä–Ω ‚Äî –ø–æ–¥–∞—Ç–æ–∫ 5% –≤—ñ–¥ –¥–æ—Ö–æ–¥—É.
//   –ù–∞–ø—Ä–∏–∫–ª–∞–¥:

// function calculateTaxes(income) {
//   if (income <= 1000) {
//     return income * 0.02;
//   }
//   if (income <= 10000 && income > 1000) {
//     return income * 0.03;
//   }
//   return income * 0.05;
// }
//! –í–ê–†–Ü–ê–ù–¢ 2
// function calculateTaxes(income) {
//   if (income <= 1000) {
//     return income * 0.02;
//   } else if (income <= 10000) {
//     return income * 0.03;
//   } else {
//     return income * 0.05;
//   }
// }

// calculateTaxes(900); // 18 (900 * 0.02), –æ—Å–∫—ñ–ª—å–∫–∏ 900 < 1000
// calculateTaxes(5000); // 150 (5000 * 0.03), –æ—Å–∫—ñ–ª—å–∫–∏ 5000 < 10000 —ñ 5000 > 1001
// calculateTaxes(10500); // 525 (10500 * 0.05), –æ—Å–∫—ñ–ª—å–∫–∏ 10500 > 10000

//! -----------------------  Task-8  ------------------------
// –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —Å—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é getLargestExpressionResultOfTwo, —è–∫–∞ –ø—Ä–∏–π–º–∞—î 2 —á–∏—Å–ª–∞: a —Ç–∞ b. –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å —Ç–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–∞–π–±—ñ–ª—å—à–∏–π —ñ–∑ –Ω–∏—Ö:

// a + b
// a - b
// –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É:

// —á–∏—Å–ª–∞ a —Ç–∞ b –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤—ñ–¥'—î–º–Ω–∏–º–∏;
// –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —á–∏ –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ else.
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ a = 10 —Ç–∞ b = 5, —Ç–æ:

// a + b = 15 ‚Äî –Ω–∞–π–±—ñ–ª—å—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// a - b = 5
// –ê–ª–µ —è–∫—â–æ a = 20 —Ç–∞ b = -5, —Ç–æ:

// a + b = 15
// a - b = 25 ‚Äî –Ω–∞–π–±—ñ–ª—å—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç

/**
 * @param {number} a
 * @param {number} b
 *
 * @returns {number}
 */
// console.log(getLargestExpressionResultOfTwo(10, 5)); // 15
// console.log(getLargestExpressionResultOfTwo(20, -5)); // 25

// function getLargestExpressionResultOfTwo(a, b) {
//   if (a + b > a - b) {
//     return a + b;
//   }
//   return a - b;
// }

//! -----------------------  Task-8  ------------------------
//* –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —Å—Ç–≤–æ—Ä–∏ —Ñ-—Ü—ñ—é getLargestExpressionResultOfThree, —è–∫–∞ –ø—Ä–∏–π–º–∞—î 2 —á–∏—Å–ª–∞: a —Ç–∞ b.
//* –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å —Ç–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–∞–π–±—ñ–ª—å—à–∏–π —ñ–∑ –Ω–∏—Ö:

// a + b
// a - b
// a * b
// –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É:

// —á–∏—Å–ª–∞ a —Ç–∞ b –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤—ñ–¥'—î–º–Ω–∏–º–∏;
// –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —á–∏ –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ else.
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ a = 10 —Ç–∞ b = 5, —Ç–æ:

// a + b = 15
// a - b = 5
// a * b = 50 ‚Äî –Ω–∞–π–±—ñ–ª—å—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// –ê–ª–µ —è–∫—â–æ a = 10 —Ç–∞ b = -5, —Ç–æ:

// a + b = 5
// a - b = 15 ‚Äî –Ω–∞–π–±—ñ–ª—å—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// a * b = -50
// console.log(getLargestExpressionResultOfThree(10, 5)); // 50
// console.log(getLargestExpressionResultOfThree(10, -5)); // 15

/**
 * @param {number} a
 * @param {number} b
 *
 * @returns {number}
 */
// function getLargestExpressionResultOfThree(a, b) {
//   //! write code here
//   if (a * b > a + b && a * b > a - b) {
//     return a * b;
//   }
//   if (a + b > a * b && a + b > a - b) {
//     return a + b;
//   }
//   return a - b;
// }
//! –í–ê–†–Ü–ê–ù–¢ 2
// function getLargestExpressionResultOfThree(a, b) {
//   const sumResult = a + b;
//   const subtractResult = a - b;
//   const multiplyResult = a * b;

//   let largestResult = sumResult;

//   if (subtractResult > largestResult) {
//     largestResult = subtractResult;
//   }
//   if (multiplyResult > largestResult) {
//     largestResult = multiplyResult;
//   }

//   return largestResult;
// }

//! -----------------------  Task-8  ------------------------
// –£ —Ü—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ —Å—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é getLargestExpressionResult, —è–∫–∞ –ø—Ä–∏–π–º–∞—î 2 —á–∏—Å–ª–∞: a —Ç–∞ b. –¶—è —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å —Ç–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–∞–π–±—ñ–ª—å—à–∏–π —ñ–∑ –Ω–∏—Ö:

// a + b
// a - b
// a * b
// a / b
// –ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É:

// —á–∏—Å–ª–∞ a —Ç–∞ b –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤—ñ–¥'—î–º–Ω–∏–º–∏;
// –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —á–∏ –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ else.
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ a = 10 —Ç–∞ b = 5, —Ç–æ:

// a + b = 15
// a - b = 5
// a * b = 50 ‚Äî –Ω–∞–π–±—ñ–ª—å—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// a / b = 2
// –ê–ª–µ —è–∫—â–æ a = 10 —Ç–∞ b = -5, —Ç–æ:

// a + b = 5
// a - b = 15 ‚Äî –Ω–∞–π–±—ñ–ª—å—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// a * b = -50
// a / b = -2
/**
 * @param {number} a
 * @param {number} b
 *
 * @returns {number}
 */
console.log(getLargestExpressionResult(10, 5)); // 50
console.log(getLargestExpressionResult(10, -5)); // 15

function getLargestExpressionResult(a, b) {
  if (a * b > a + b && a * b > a - b && a * b > a / b) {
    return a * b;
  }
  if (a + b > a * b && a + b > a - b && a + b > a / b) {
    return a + b;
  }
  if (a - b > a * b && a - b > a + b && a - b > a / b) {
    return a - b;
  }
  return a / b;
}
//! –í–ê–†–Ü–ê–ù–¢ 2
// –û—Å—å –±—ñ–ª—å—à –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–∞ –∫–æ–º–ø–∞–∫—Ç–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç —Ñ—É–Ω–∫—Ü—ñ—ó –±–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è Math.max(), —Ç–µ—Ä–Ω–∞—Ä–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä—ñ–≤ —Ç–∞ –∫–ª—é—á–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞ else:

// function getLargestExpressionResult(a, b) {
//   const results = [a * b, a + b, a - b, a / b];
//   let largestResult = results[0];

//   for (const result of results) {
//     if (result > largestResult) {
//       largestResult = result;
//     }
//   }

//   return largestResult;
// }
//! -----------------------  Task-8  ------------------------
